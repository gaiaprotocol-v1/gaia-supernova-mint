/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SupernovaRewardDistributor,
  SupernovaRewardDistributorInterface,
} from "../SupernovaRewardDistributor";

const _abi = [
  {
    constant: true,
    inputs: [],
    name: "MULTIPLIER",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "claimInterval",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "user",
        type: "address",
      },
    ],
    name: "claim",
    outputs: [
      {
        name: "reward",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "newInterval",
        type: "uint256",
      },
    ],
    name: "updateClaimInterval",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "distributionStarted",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "user",
        type: "address",
      },
    ],
    name: "remainingTimeToClaim",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "lastKlayBalance",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "devFund",
    outputs: [
      {
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "from",
        type: "address",
      },
      {
        name: "to",
        type: "address",
      },
      {
        name: "fromLastBalance",
        type: "uint256",
      },
      {
        name: "toLastBalance",
        type: "uint256",
      },
    ],
    name: "beforeSupernovaTransfer",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "supernova",
    outputs: [
      {
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "",
        type: "address",
      },
    ],
    name: "unclaimed",
    outputs: [
      {
        name: "unclaimedReward",
        type: "uint256",
      },
      {
        name: "rewardDebt",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "",
        type: "address",
      },
    ],
    name: "rewardDebt",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "owner",
    outputs: [
      {
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "isOwner",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "accRewardPerShare",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [],
    name: "update",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "",
        type: "address",
      },
    ],
    name: "claimed",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [],
    name: "startDistribution",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "newDevFund",
        type: "address",
      },
    ],
    name: "updateDevFund",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "totalDistribution",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "user",
        type: "address",
      },
    ],
    name: "claimableReward",
    outputs: [
      {
        name: "reward",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "",
        type: "address",
      },
    ],
    name: "lastClaimedTime",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "token",
        type: "address",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        name: "_supernova",
        type: "address",
      },
      {
        name: "_devFund",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    payable: true,
    stateMutability: "payable",
    type: "fallback",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        name: "newDevFund",
        type: "address",
      },
    ],
    name: "UpdateDevFund",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        name: "newInterval",
        type: "uint256",
      },
    ],
    name: "UpdateClaimInterval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "StartDistribution",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Distribute",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Claim",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        name: "amount",
        type: "uint256",
      },
    ],
    name: "DisclaimReward",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        name: "amount",
        type: "uint256",
      },
    ],
    name: "UpdateUnclaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516040806118ae8339810180604052604081101561003057600080fd5b508051602090910151600080546001600160a01b03191633178082556040516001600160a01b039190911691907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a36001600160a01b038216158015906100a257506001600160a01b03811615155b61010d57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f57524f4e475f4144445245535300000000000000000000000000000000000000604482015290519081900360640190fd5b600180546001600160a01b039384166001600160a01b0319918216179091556002805492909316911617905562093a80600b5561175f8061014f6000396000f3fe6080604052600436106101665760003560e01c8063715018a6116100d1578063d83623dd1161008a578063e950342511610064578063e950342514610481578063f2fde38b146104b4578063f3f91fa0146104e7578063f4f3b2001461051a57610166565b8063d83623dd14610424578063e40db51e14610439578063e75e454e1461046c57610166565b8063715018a6146103885780638da5cb5b1461039d5780638f32d59b146103b2578063939d6237146103c7578063a2e62045146103dc578063c884ef83146103f157610166565b8063296d04aa11610123578063296d04aa146102655780634390d2a81461027a57806345e8b847146102ab5780634a91f2b1146102f4578063505bd3da146103095780635873eb9b1461035557610166565b8063059f8b16146101705780630b433a12146101975780631e83409a146101ac578063206e8f32146101df578063217550881461020957806327087cd614610232575b61016e61054d565b005b34801561017c57600080fd5b50610185610689565b60408051918252519081900360200190f35b3480156101a357600080fd5b50610185610696565b3480156101b857600080fd5b50610185600480360360208110156101cf57600080fd5b50356001600160a01b031661069c565b3480156101eb57600080fd5b5061016e6004803603602081101561020257600080fd5b5035610908565b34801561021557600080fd5b5061021e61098d565b604080519115158252519081900360200190f35b34801561023e57600080fd5b506101856004803603602081101561025557600080fd5b50356001600160a01b0316610996565b34801561027157600080fd5b50610185610a93565b34801561028657600080fd5b5061028f610a99565b604080516001600160a01b039092168252519081900360200190f35b3480156102b757600080fd5b5061016e600480360360808110156102ce57600080fd5b506001600160a01b03813581169160208101359091169060408101359060600135610aa8565b34801561030057600080fd5b5061028f610b34565b34801561031557600080fd5b5061033c6004803603602081101561032c57600080fd5b50356001600160a01b0316610b43565b6040805192835260208301919091528051918290030190f35b34801561036157600080fd5b506101856004803603602081101561037857600080fd5b50356001600160a01b0316610b5c565b34801561039457600080fd5b5061016e610b6e565b3480156103a957600080fd5b5061028f610c02565b3480156103be57600080fd5b5061021e610c11565b3480156103d357600080fd5b50610185610c22565b3480156103e857600080fd5b5061016e610c28565b3480156103fd57600080fd5b506101856004803603602081101561041457600080fd5b50356001600160a01b0316610c30565b34801561043057600080fd5b5061016e610c42565b34801561044557600080fd5b5061016e6004803603602081101561045c57600080fd5b50356001600160a01b0316610cc4565b34801561047857600080fd5b50610185610db9565b34801561048d57600080fd5b50610185600480360360208110156104a457600080fd5b50356001600160a01b0316610dbf565b3480156104c057600080fd5b5061016e600480360360208110156104d757600080fd5b50356001600160a01b0316610e61565b3480156104f357600080fd5b506101856004803603602081101561050a57600080fd5b50356001600160a01b0316610eb7565b34801561052657600080fd5b5061016e6004803603602081101561053d57600080fd5b50356001600160a01b0316610ec9565b600a5460ff1661055c57610687565b60055430319060009061057690839063ffffffff61100c16565b9050801561068457610632610623600160009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156105d257600080fd5b505afa1580156105e6573d6000803e3d6000fd5b505050506040513d60208110156105fc57600080fd5b50516106178468056bc75e2d6310000063ffffffff61105716565b9063ffffffff6110b316565b6003549063ffffffff6110f516565b60035560058290556040805182815290517f4def474aca53bf221d07d9ab0f675b3f6d8d2494b8427271bcf43c018ef1eead9181900360200190a1600454610680908263ffffffff6110f516565b6004555b50505b565b68056bc75e2d6310000081565b600b5481565b60006001600160a01b0382163314806106cd57506106b8610c02565b6001600160a01b0316336001600160a01b0316145b6107135760408051600160e51b62461bcd02815260206004820152600c6024820152600160a21b6b15539055551213d49256915102604482015290519081900360640190fd5b6001600160a01b038216600090815260086020526040902054600b544290820111156107765760408051600160e51b62461bcd0281526020600482015260076024820152600160ca1b661393d517d6515502604482015290519081900360640190fd5b60015460408051600160e01b6370a082310281526001600160a01b0386811660048301529151600093849316916370a08231916024808301926020929190829003018186803b1580156107c857600080fd5b505afa1580156107dc573d6000803e3d6000fd5b505050506040513d60208110156107f257600080fd5b50519050610801858280611152565b9094509150836108495760408051600160e51b62461bcd0281526020600482015260086024820152600160c41b6705245574152445f302604482015290519081900360640190fd5b6001600160a01b038516600090815260096020908152604080832083815560010183905560088252808320429055600782528083208590556006909152902054610899908563ffffffff6110f516565b6001600160a01b0386166000908152600660205260409020556108bc858561122e565b6040805185815290516001600160a01b038716917f47cee97cb7acd717b3c0aa1435d004cd5b3c8c57d70dbceb4e4458bbd60e39d4919081900360200190a25050503031600555919050565b610910610c11565b6109525760408051600160e51b62461bcd0281526020600482018190526024820152600080516020611714833981519152604482015290519081900360640190fd5b600b8190556040805182815290517f147643a3380a07b720e58d29bed784fd77f5778aaf06610663435736d29a776d9181900360200190a150565b600a5460ff1681565b60015460408051600160e01b6370a082310281526001600160a01b0384811660048301529151600093849316916370a08231916024808301926020929190829003018186803b1580156109e857600080fd5b505afa1580156109fc573d6000803e3d6000fd5b505050506040513d6020811015610a1257600080fd5b505111610a595760408051600160e51b62461bcd02815260206004820152600a6024820152600160b01b69494e454c494749424c4502604482015290519081900360640190fd5b600b546001600160a01b0383166000908152600860205260409020540142811115610a88574290039050610a8e565b60009150505b919050565b60055481565b6002546001600160a01b031681565b6001546001600160a01b03163314610afc5760408051600160e51b62461bcd02815260206004820152600c6024820152600160a21b6b15539055551213d49256915102604482015290519081900360640190fd5b600a5460ff16610b0b57610b2e565b6001600160a01b03841615610b2457610b24848361127d565b610b2e8382611487565b50505050565b6001546001600160a01b031681565b6009602052600090815260409020805460019091015482565b60076020526000908152604090205481565b610b76610c11565b610bb85760408051600160e51b62461bcd0281526020600482018190526024820152600080516020611714833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b60035481565b61068761054d565b60066020526000908152604090205481565b610c4a610c11565b610c8c5760408051600160e51b62461bcd0281526020600482018190526024820152600080516020611714833981519152604482015290519081900360640190fd5b600a805460ff191660011790556040517fd085c8b8ef00d17c1373ae0256917ab7eb8e8018d2bca45fca4376448207188c90600090a1565b610ccc610c11565b610d0e5760408051600160e51b62461bcd0281526020600482018190526024820152600080516020611714833981519152604482015290519081900360640190fd5b6002546001600160a01b0382811691161415610d655760408051600160e51b62461bcd02815260206004820152600b6024820152600160aa1b6a1393d517d0d2105391d15102604482015290519081900360640190fd5b600280546001600160a01b0383166001600160a01b0319909116811790915560408051918252517f7de9de9894d93d7f1b540d3876ef6dac577aa15e5d92a990d987e1de839e27109181900360200190a150565b60045481565b60015460408051600160e01b6370a082310281526001600160a01b0384811660048301529151600093849316916370a08231916024808301926020929190829003018186803b158015610e1157600080fd5b505afa158015610e25573d6000803e3d6000fd5b505050506040513d6020811015610e3b57600080fd5b5051905080610e4e576000915050610a8e565b610e59838283611152565b509392505050565b610e69610c11565b610eab5760408051600160e51b62461bcd0281526020600482018190526024820152600080516020611714833981519152604482015290519081900360640190fd5b610eb48161150a565b50565b60086020526000908152604090205481565b610ed1610c11565b610f135760408051600160e51b62461bcd0281526020600482018190526024820152600080516020611714833981519152604482015290519081900360640190fd5b60408051600160e01b6370a0823102815230600482015290516001600160a01b0383169163a9059cbb91339184916370a0823191602480820192602092909190829003018186803b158015610f6757600080fd5b505afa158015610f7b573d6000803e3d6000fd5b505050506040513d6020811015610f9157600080fd5b50516040805163ffffffff851660e01b81526001600160a01b03909316600484015260248301919091525160448083019260209291908290030181600087803b158015610fdd57600080fd5b505af1158015610ff1573d6000803e3d6000fd5b505050506040513d602081101561100757600080fd5b505050565b600061104e83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506115ad565b90505b92915050565b60008261106657506000611051565b8282028284828161107357fe5b041461104e57604051600160e51b62461bcd0281526004018080602001828103825260218152602001806116f36021913960400191505060405180910390fd5b600061104e83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611647565b60008282018381101561104e5760408051600160e51b62461bcd02815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b60035460009081906111626116b2565b506001600160a01b038616600090815260096020908152604080832081518083019092528054808352600190910154928201839052955091906111bd576001600160a01b0388166000908152600760205260409020546111c3565b81602001515b90506112026111f5826111e968056bc75e2d631000006106178c8963ffffffff61105716565b9063ffffffff61100c16565b869063ffffffff6110f516565b945061122168056bc75e2d63100000610617888663ffffffff61105716565b9350505050935093915050565b30318082111561123c578091505b611245836116af565b6001600160a01b03166108fc839081150290604051600060405180830381858888f19350505050158015610b2e573d6000803e3d6000fd5b60008061128b848485611152565b6001600160a01b038616600090815260096020526040812081815560010155600354919350915082156114365761135e611351600160009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561130c57600080fd5b505afa158015611320573d6000803e3d6000fd5b505050506040513d602081101561133657600080fd5b50516106178668056bc75e2d6310000063ffffffff61105716565b829063ffffffff6110f516565b600381905590506000611388836111e968056bc75e2d63100000610617898763ffffffff61105716565b905080156113ac576002546113a6906001600160a01b03168261122e565b30316005555b6040805185815290516001600160a01b038816917fc4c49b6dabfd6256ab20cd8b52b58dbbe69658682ea2717c4985690b08e094a5919081900360200190a26040805185815290517f4def474aca53bf221d07d9ab0f675b3f6d8d2494b8427271bcf43c018ef1eead9181900360200190a1600454611431908563ffffffff6110f516565b600455505b61146468056bc75e2d631000006106178361145888600163ffffffff61100c16565b9063ffffffff61105716565b6001600160a01b0390951660009081526007602052604090209490945550505050565b6000806114a584846114a081600163ffffffff6110f516565b611152565b6001600160a01b0386166000818152600960209081526040918290208581556001018490558151858152915194965092945090927fb7381cb032bdbb8afaaee6a9fcdba14229a2e0d1e3c7016833fe2c0b178dd720929181900390910190a250505050565b6001600160a01b03811661155257604051600160e51b62461bcd0281526004018080602001828103825260268152602001806116cd6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000818484111561163f57604051600160e51b62461bcd0281526004018080602001828103825283818151815260200191508051906020019080838360005b838110156116045781810151838201526020016115ec565b50505050905090810190601f1680156116315780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000818361169957604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156116045781810151838201526020016115ec565b5060008385816116a557fe5b0495945050505050565b90565b60405180604001604052806000815260200160008152509056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a165627a7a723058204f7d5250207e6e1d073083250575d43b6a4072e5ec9083be6d3c9f291f6142a40029";

type SupernovaRewardDistributorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SupernovaRewardDistributorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SupernovaRewardDistributor__factory extends ContractFactory {
  constructor(...args: SupernovaRewardDistributorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "SupernovaRewardDistributor";
  }

  deploy(
    _supernova: string,
    _devFund: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SupernovaRewardDistributor> {
    return super.deploy(
      _supernova,
      _devFund,
      overrides || {}
    ) as Promise<SupernovaRewardDistributor>;
  }
  getDeployTransaction(
    _supernova: string,
    _devFund: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_supernova, _devFund, overrides || {});
  }
  attach(address: string): SupernovaRewardDistributor {
    return super.attach(address) as SupernovaRewardDistributor;
  }
  connect(signer: Signer): SupernovaRewardDistributor__factory {
    return super.connect(signer) as SupernovaRewardDistributor__factory;
  }
  static readonly contractName: "SupernovaRewardDistributor";
  public readonly contractName: "SupernovaRewardDistributor";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SupernovaRewardDistributorInterface {
    return new utils.Interface(_abi) as SupernovaRewardDistributorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SupernovaRewardDistributor {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SupernovaRewardDistributor;
  }
}
